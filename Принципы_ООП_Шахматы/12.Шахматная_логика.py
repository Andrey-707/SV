# Стас Волик. Шахматы. 12.Шахматная логика
# Дерево ходов и решений

'''
                                                                   Возможный_ход
                                                                         |
                    -----------------------------------------------------------------------------------
                    |                                                    |                            |
               пешку_вперед                                   бьем_пешку_противника            ход_королем
                    |                                                    |                            |
       -----------------------------                                --------------------              ------
       |                           |                                |                  |                   |
ход_противника_1         ход_противника_2                  ход_противника_3    ход_противника_4     ход_противника_5
       |                           |                                |                  |                      |
  ------------          -----------------------            -------------          -------------               -
  |          |          |          |          |            |           |          |           |               |
наш_ход_1 наш_ход_2  наш_ход_3 наш_ход_4 наш_ход_5     наш_ход_6   наш_ход_7  наш_ход_8   наш_ход_9      наш_ход_10


В данном примере ход противника продумывается на три шага вперед, глубина хода равна трем.


####################################################################################################################
Рассмотрим все ходы подробнее

####################################
наш_ход_1
  a  b  c  d  e  f  g  h
8
7          ♔
6
5             ♚
4
3
2
1

0 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
100 - 100 = 0 баллов

####################################
наш_ход_2
  a  b  c  d  e  f  g  h
8       ♜
7             ♔
6
5             ♚
4
3
2
1

25 баллов
♜ - 25 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
25 + 100 - 100 = 25 баллов

####################################
наш_ход_3
  a  b  c  d  e  f  g  h
8
7    ♟    ♔
6
5       ♚
4
3
2
1

6 баллов (пешка ближе к краю, следовательно больше шансов стать ферзем, следовательно больше баллов, чем в ходе_4)
♟ - 6 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
6 + 100 - 100 = 6 баллов

####################################
наш_ход_4
  a  b  c  d  e  f  g  h
8
7
6    ♟    ♔
5
4       ♚
3
2
1

5 баллов
♟ - 5 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
5 + 100 - 100 = 5 баллов

####################################
наш_ход_5
  a  b  c  d  e  f  g  h
8
7    ♟
6          ♔
5
4       ♚
3
2
1

6 баллов
♟ - 6 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
6 + 100 - 100 = 6 баллов

####################################
наш_ход_6
  a  b  c  d  e  f  g  h
8       ♜
7
6          ♔
5
4       ♚
3
2
1

25 баллов
♜ - 25 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
25 + 100 - 100 = 25 баллов

####################################
наш_ход_7
  a  b  c  d  e  f  g  h
8
7    ♟    ♔
6          
5       ♚
4
3
2
1

6 баллов
♟ - 6 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
6 + 100 - 100 = 6 баллов

####################################
наш_ход_8
  a  b  c  d  e  f  g  h
8                       
7    ♟
6          ♔
5
4       ♚
3
2
1

6 баллов
♟ - 6 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
6 + 100 - 100 = 6 баллов

####################################
наш_ход_9
  a  b  c  d  e  f  g  h
8                       
7          ♔
6    
5             ♚
4
3
2
1

0 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
100 - 100 = 0 баллов

####################################
наш_ход_10
  a  b  c  d  e  f  g  h
8                       
7    ♟
6          ♔   
5
4       ♚
3
2
1

6 баллов
♟ - 6 баллов
♔ - 100 баллов
♚ - 100 баллов
----------------
6 + 100 - 100 = 6 баллов

Итог:
Самая выгодная позиция в ситуации наш_ход_6
'''

# Обход дерева вариантов осуществляется с помощью рекурсии

# Вариант_1. С каждым вызовом функции do() передается ход от игрока к противнику и обратно.

def do(is_me, depth):
    if depth == 5:
        print("Достигнута максимальная глубина.")
        return
    print("Мой ход." if is_me else "Ход противника.")
    do(not is_me, depth + 1)


# do(True, 0) # для просмотра раскомментировать
'''OUT:
Мой ход.
Ход противника.
Мой ход.
Ход противника.
Мой ход.
Достигнута максимальная глубина.
'''

# Вариант_2. У противника всегда два возможных хода на каждом этапе

def do(is_me, depth):
    if depth == 4:
        return
    for i in ("ход_1", "ход_2"):
        print(" " * depth * 2 + ("Мой ход" if is_me else "Ход противника") + " " + i)
        do(not is_me, depth + 1)


# do(True, 0) # для просмотра раскомментировать
'''OUT:
Мой ход ход_1
  Ход противника ход_1
    Мой ход ход_1
      Ход противника ход_1
      Ход противника ход_2
    Мой ход ход_2
      Ход противника ход_1
      Ход противника ход_2
  Ход противника ход_2
    Мой ход ход_1
      Ход противника ход_1
      Ход противника ход_2
    Мой ход ход_2
      Ход противника ход_1
      Ход противника ход_2
Мой ход ход_2
  Ход противника ход_1
    Мой ход ход_1
      Ход противника ход_1
      Ход противника ход_2
    Мой ход ход_2
      Ход противника ход_1
      Ход противника ход_2
  Ход противника ход_2
    Мой ход ход_1
      Ход противника ход_1
      Ход противника ход_2
    Мой ход ход_2
      Ход противника ход_1
      Ход противника ход_2
'''

# Вариант_3. Идет выбор позиции, в зависимости от того чей в данный момент ход. Функция оценки позиции заменена
# на рандомное число от 0 до 100.
import random


def ppp(depth, message):
    print(" " * depth * 3 + message)

def do(is_me, depth):
    if depth == 3:
        return random.randint(0, 100)
    rates = []
    for i in ("ход_1", "ход_2"):
        ppp(depth, ("Мой" if is_me else "Ход противника") + " " + i)
        rate = do(not is_me, depth + 1)
        ppp(depth, "Позиция оценена: %d" % rate)
        rates.append(rate)
    ppp(depth, "Из оценок %s выбираем %s" % (rates, "лучшую" if is_me else "худшую"))
    return max(rates) if is_me else min(rates)


do(True, 0)
'''OUT:
Мой ход_1
   Ход противника ход_1
      Мой ход_1
      Позиция оценена: 2
      Мой ход_2
      Позиция оценена: 9
      Из оценок [2, 9] выбираем лучшую
   Позиция оценена: 9
   Ход противника ход_2
      Мой ход_1
      Позиция оценена: 81
      Мой ход_2
      Позиция оценена: 29
      Из оценок [81, 29] выбираем лучшую
   Позиция оценена: 81
   Из оценок [9, 81] выбираем худшую
Позиция оценена: 9
Мой ход_2
   Ход противника ход_1
      Мой ход_1
      Позиция оценена: 41
      Мой ход_2
      Позиция оценена: 52
      Из оценок [41, 52] выбираем лучшую
   Позиция оценена: 52
   Ход противника ход_2
      Мой ход_1
      Позиция оценена: 90
      Мой ход_2
      Позиция оценена: 53
      Из оценок [90, 53] выбираем лучшую
   Позиция оценена: 90
   Из оценок [52, 90] выбираем худшую
Позиция оценена: 52
Из оценок [9, 52] выбираем лучшую
'''